<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 无名的旅人</title>
    <link>https://jrdeng.github.io/tags/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 无名的旅人</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 07 Jan 2021 16:59:58 +0800</lastBuildDate><atom:link href="https://jrdeng.github.io/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KVM/libvirt forwarding ports to guest via iptables</title>
      <link>https://jrdeng.github.io/post/9/</link>
      <pubDate>Thu, 07 Jan 2021 16:59:58 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/9/</guid>
      <description># connections from outsidesudo iptables -I FORWARD -o virbr0 -d 192.168.122.226 -j ACCEPTsudo iptables -t nat -A PREROUTING -p tcp --dport 8006 -j DNAT --to 192.</description>
    </item>
    
    <item>
      <title>Lua 5.4.x CMakeLists.txt</title>
      <link>https://jrdeng.github.io/post/8/</link>
      <pubDate>Fri, 30 Oct 2020 12:22:14 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/8/</guid>
      <description>cmake_minimum_required(VERSION 3.12)project(Lua)add_definitions(-DLUA_COMPAT_5_3)if(UNIX)add_definitions(-DLUA_USE_LINUX)endif(UNIX)### force optionsif(WIN32)add_compile_options(&amp;quot;$&amp;lt;$&amp;lt;C_COMPILER_ID:MSVC&amp;gt;:/utf-8&amp;gt;&amp;quot;)add_compile_options(&amp;quot;$&amp;lt;$&amp;lt;CXX_COMPILER_ID:MSVC&amp;gt;:/utf-8&amp;gt;&amp;quot;)endif()# see https://www.lua.org/manual/5.4/readme.html#other### build libset(C_FILES lapi.c lcode.c lctype.c ldebug.c ldo.c ldump.</description>
    </item>
    
    <item>
      <title>解决Windows不能远程登录ubuntu18.04.2（xRDP）的问题</title>
      <link>https://jrdeng.github.io/post/7/</link>
      <pubDate>Fri, 29 Mar 2019 10:35:05 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/7/</guid>
      <description>Windows远程登录工具（mstsc）可以说是比较好用的，为了方便开发，尝试在ubuntu上搭建xRDP，结果一直卡在登录界面。
表象是输入账号密码后，屏幕空白一段时间，然后提示：
connection problem,giving upsome problem 各种分析之后发现应该是少了一个叫 xorgxrdp 的包，那就装上吧，结果这个包依赖另一个叫xserver-xorg-core的包，但是依赖不满足，所以没自动推荐安装。
那就手动安装xserver-xorg-core吧，结果发现这货要让我卸载很多东西，包括xorg的很多包和桌面（xubuntu-desktop）。。。我怕会破坏环境影响使用，就停在这里没继续了。
$ sudo apt-get install xserver-xorg-coreSuggested packages:xfonts-100dpi | xfonts-75dpiThe following packages will be REMOVED:xorg xserver-xorg-core-hwe-18.</description>
    </item>
    
    <item>
      <title>fatal error: &#39;asm/types.h&#39; file not found</title>
      <link>https://jrdeng.github.io/post/6/</link>
      <pubDate>Fri, 15 Mar 2019 17:27:44 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/6/</guid>
      <description>用cmake+ndk的时候遇到一个错误：
fatal error: &#39;asm/types.h&#39; file not found用的是ndk自带的 build/cmake/android.toolchain.cmake。
看现象是include路径没包含进来。
解决方案，修改 build/cmake/android.toolchain.cmake，增加：
if (${ANDROID_ABI} STREQUAL &amp;quot;x86_64&amp;quot;)include_directories(${ANDROID_SYSROOT}/usr/include/x86_64-linux-android)elseif (${ANDROID_ABI} STREQUAL &amp;quot;x86&amp;quot;)include_directories(${ANDROID_SYSROOT}/usr/include/i686-linux-android)elseif (${ANDROID_ABI} STREQUAL &amp;quot;arm64-v8a&amp;quot;)include_directories(${ANDROID_SYSROOT}/usr/include/aarch64-linux-android)elseif (${ANDROID_ABI} STREQUAL &amp;quot;armeabi-v7a&amp;quot;)include_directories(${ANDROID_SYSROOT}/usr/include/arm-linux-androideabi)endif()搞定。</description>
    </item>
    
    <item>
      <title>blog-hugo的bug导致生成静态页面失败</title>
      <link>https://jrdeng.github.io/post/5/</link>
      <pubDate>Tue, 13 Nov 2018 18:03:58 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/5/</guid>
      <description>这个bug 导致hugo生成静态页面失败。
之前在另一台机器上解决了这个问题，也 提交 到github了。
但是由于家里跑cron job的机器没有自动更新blog-hugo的代码，结果这两天的博客都是404。。。
自动生成博客之前还是要先更新 blog-hugo 项目的代码啊！
Comments: (on github issue)  </description>
    </item>
    
    <item>
      <title>cannot locate symbol &#34;_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base&#34;</title>
      <link>https://jrdeng.github.io/post/4/</link>
      <pubDate>Thu, 08 Nov 2018 11:17:39 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/4/</guid>
      <description>用NDK standalone toolchain编译生成的动态库，在设备上跑的时候报这个错。
搜了一下这个符号，似乎是STL相关的（？），而且是 libgnustl 里才有。
最后解决办法：make standalone toolchain的时候，指定 --stl=libcxx ，不使用默认的 libgnustl。
这样生成的toolchain不包含这个符号，生成的动态库也不会去找这个符号。
（以前一直用的默认的libgnustl并没有报错，应该是项目上没用到STL相关的东西？）
Comments: (on github issue)  </description>
    </item>
    
    <item>
      <title>测试局域网的可用（外出）端口</title>
      <link>https://jrdeng.github.io/post/3/</link>
      <pubDate>Sun, 30 Sep 2018 15:05:37 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/3/</guid>
      <description>由于某些特殊原因，公司对外出的端口进行了限制，基本上只允许最常用的几个（21，22，80，443等）。
这样的结果是，一些使用了自定义端口的网站 (https://example.com:8080) 就没办法访问了。
这样我在家里的NAS服务器上装的nextcloud需要维护管理的时候就不太方便了（因为电信默认禁止了80和443端口的访问，自建的NAS服务器只能用自定义端口）。
因为是自用，不可能让IT开绿灯，折中一下，只有找一个公司这边也开放的端口，然后就用这个端口来做NAS服务端口。
说干就干，找到一个监听了（几乎）所有端口的服务器： http://portquiz.net （表示感谢！）
写个脚本跑一跑：
#!/bin/bashoutput=available_ports.txtecho &amp;quot;&amp;quot; &amp;gt; $outputfor i in $(seq 1 65535); doecho &amp;quot;testing $i...&amp;quot;nc -zv portquiz.</description>
    </item>
    
    <item>
      <title>用github的issue做记录并生成静态博客</title>
      <link>https://jrdeng.github.io/post/1/</link>
      <pubDate>Mon, 27 Aug 2018 23:58:43 +0800</pubDate>
      
      <guid>https://jrdeng.github.io/post/1/</guid>
      <description>构思：
 在github上写issue 把issue爬下来（github-issue-fetcher） 评论系统用https://utteranc.es/，可以跟issue完美结合 用hugo等生成静态博客，并发布到github page（blog-hugo）  1. 在github上写issue 正如本篇一样，写到github的issue页面里，并保持OPEN状态。
可以加一些 Labels（blog-hugo会当作tag写入博客）
2. 把issue爬下来 写了些Python脚本，通过Github GraphQL API去爬issue list。
由于API的限制，每次抓issues 最大只能100条（first:100），如果issue数目超过100， 需要用到 cursor 多次获取。
然后偶然发现author字段有时候会返回None， 有点没搞明白。。。</description>
    </item>
    
  </channel>
</rss>
